// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]
  sessions      Session[]
  isAdmin       Boolean   @default(false)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String   @id @default(cuid())
  name        String
  price       Float
  pricePer100gm Float? // Price per 100gm
  weight      Float?   // Weight value
  weightUnit  String?  // Weight unit (kg or gm)
  image       String?
  company     String?
  isAvailable Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Offer relationship
  offer       Offer?   @relation(fields: [offerId], references: [id])
  offerId     String?
}

model Offer {
  id          String   @id @default(cuid())
  name        String
  discountPercentage Int // Discount percentage (rounded)
  startDate   DateTime @default(now())
  endDate     DateTime
  endTime     String?  @default("23:59") // Default to 11:59 PM
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Product relationship
  products    Product[]
}

model Order {
  id        String   @id @default(cuid())
  items     String   // Store cart items as JSON string
  total     Float
  customerName String?
  customerPhone String?
  status    String   @default("pending") // pending, confirmed, delivered
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
